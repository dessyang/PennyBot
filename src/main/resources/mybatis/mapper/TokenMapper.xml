<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yjymh.penny.mapper.TokenMapper">
    <select id="queryTokenById" resultType="Token" parameterType="Token">
        <choose>
            <when test="type == 'friend'">
                select * from `friend`
                <where>
                    account = #{account}
                </where>
            </when>
            <when test="type == 'group'">
                select * from `group`
                <where>
                    account = #{account}
                </where>
            </when>
        </choose>
    </select>

    <select id="queryTokenByToken" resultType="Token" parameterType="Token">
        <choose>
            <when test="type == 'friend'">
                select * from `friend`
            </when>
            <when test="type == 'group'">
                select * from `group`
            </when>
        </choose>
        <where>
            token = #{token}
        </where>
    </select>

    <insert id="addToken" parameterType="Token">
        <choose>
            <when test="type == 'friend'">
                INSERT INTO `friend`
            </when>
            <when test="type == 'group'">
                INSERT INTO `group`
            </when>
        </choose>

        (`account`, `token`, `status`, `update_time`, `create_time`)
        VALUES (#{account}, #{token}, #{status}, #{updateTime}, #{createTime})
    </insert>

    <update id="updateToken" parameterType="Token">
        <choose>
            <when test="type == 'friend'">
                UPDATE `friend`
            </when>
            <when test="type == 'group'">
                UPDATE `group`
            </when>
        </choose>
        <set>
            <if test="token != null">`token` = '${token}',</if>
            <if test="updateTime != null">`update_time` = '${updateTime}',</if>
        </set>
        <where>
            `account` = #{account}
        </where>
    </update>

    <delete id="deleteToken" parameterType="Token">
        <choose>
            <when test="type == 'friend'">
                DELETE from `friend`
            </when>
            <when test="type == 'group'">
                DELETE from `group`
            </when>
        </choose>
        <where>
            `account` = #{account}
        </where>
    </delete>
</mapper>